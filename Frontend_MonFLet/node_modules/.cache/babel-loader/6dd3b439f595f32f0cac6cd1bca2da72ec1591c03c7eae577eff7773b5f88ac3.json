{"ast":null,"code":"var _jsxFileName = \"/home/tania-huentemilla/Documentos/MonFlet/src/components/vehiculos2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, DirectionsRenderer, useJsApiLoader } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RutaDespacho = () => {\n  _s();\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [routeStarted, setRouteStarted] = useState(false); // Para manejar cuando iniciar la ruta\n  const [origin] = useState('Temuco, Chile'); // Origen de la ruta\n  const [destination] = useState('Pucón, Chile'); // Destino de la ruta\n  const [waypoints] = useState([{\n    location: 'Lican Ray, Chile',\n    stopover: true\n  },\n  // Parada intermedia 1\n  {\n    location: 'Villarrica, Chile',\n    stopover: true\n  } // Parada intermedia 2\n  ]);\n\n  // Carga de la API de Google Maps\n  const {\n    isLoaded,\n    google\n  } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyCcF0vvhLLmuLAJcnh2ElM9aLcIwtiiwMo' // Reemplaza con tu API Key de Google Maps\n  });\n\n  // Usamos useCallback para evitar recrear la función en cada render\n  const calculateRoute = useCallback(() => {\n    if (!origin || !destination || !google) return; // Asegurarnos que `google` esté disponible\n\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      waypoints: waypoints,\n      travelMode: google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === 'OK') {\n        setDirectionsResponse(result);\n      } else {\n        console.error('Error al calcular la ruta: ', status);\n      }\n    });\n  }, [origin, destination, waypoints, google]);\n\n  // Cuando el mapa se carga y el botón \"Iniciar Ruta\" es presionado\n  const handleStartRoute = () => {\n    setRouteStarted(true); // Marca que la ruta ha sido iniciada\n  };\n  useEffect(() => {\n    if (isLoaded && google && routeStarted) {\n      // Solo calcula la ruta si \"Iniciar Ruta\" ha sido presionado\n      calculateRoute();\n    }\n  }, [isLoaded, google, routeStarted, calculateRoute]);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando mapa...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ruta-despacho-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ruta de Despacho\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRoute,\n      children: \"Iniciar Ruta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        width: '100%',\n        height: '500px'\n      },\n      center: {\n        lat: -38.73965,\n        lng: -72.58948\n      } // Centrado inicial\n      ,\n      zoom: 12,\n      children: directionsResponse && routeStarted && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directionsResponse,\n        options: {\n          suppressMarkers: true,\n          // Opcional: para no mostrar los marcadores predeterminados\n          polylineOptions: {\n            strokeColor: '#FF0000',\n            // Color de la línea del recorrido\n            strokeWeight: 5 // Grosor de la línea\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ruta-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Detalles de la Ruta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Origen:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), \" \", origin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Destino:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), \" \", destination]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Paradas intermedias:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), waypoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: point.location\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), directionsResponse && routeStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instrucciones de la Ruta:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: directionsResponse.routes[0].legs[0].steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [step.distance.text, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), \" \", step.instructions]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(RutaDespacho, \"k2qYTTkwXiByxXRPQFlsNlYSt50=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = RutaDespacho;\nexport default RutaDespacho;\nvar _c;\n$RefreshReg$(_c, \"RutaDespacho\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","DirectionsRenderer","useJsApiLoader","jsxDEV","_jsxDEV","RutaDespacho","_s","directionsResponse","setDirectionsResponse","routeStarted","setRouteStarted","origin","destination","waypoints","location","stopover","isLoaded","google","googleMapsApiKey","calculateRoute","directionsService","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","console","error","handleStartRoute","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","mapContainerStyle","width","height","center","lat","lng","zoom","directions","options","suppressMarkers","polylineOptions","strokeColor","strokeWeight","map","point","index","routes","legs","steps","step","distance","text","instructions","_c","$RefreshReg$"],"sources":["/home/tania-huentemilla/Documentos/MonFlet/src/components/vehiculos2.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, DirectionsRenderer, useJsApiLoader } from '@react-google-maps/api';\n\nconst RutaDespacho = () => {\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [routeStarted, setRouteStarted] = useState(false); // Para manejar cuando iniciar la ruta\n  const [origin] = useState('Temuco, Chile'); // Origen de la ruta\n  const [destination] = useState('Pucón, Chile'); // Destino de la ruta\n  const [waypoints] = useState([\n    { location: 'Lican Ray, Chile', stopover: true }, // Parada intermedia 1\n    { location: 'Villarrica, Chile', stopover: true }, // Parada intermedia 2\n  ]);\n\n  // Carga de la API de Google Maps\n  const { isLoaded, google } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyCcF0vvhLLmuLAJcnh2ElM9aLcIwtiiwMo', // Reemplaza con tu API Key de Google Maps\n  });\n\n  // Usamos useCallback para evitar recrear la función en cada render\n  const calculateRoute = useCallback(() => {\n    if (!origin || !destination || !google) return; // Asegurarnos que `google` esté disponible\n\n    const directionsService = new google.maps.DirectionsService();\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        waypoints: waypoints,\n        travelMode: google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === 'OK') {\n          setDirectionsResponse(result);\n        } else {\n          console.error('Error al calcular la ruta: ', status);\n        }\n      }\n    );\n  }, [origin, destination, waypoints, google]);\n\n  // Cuando el mapa se carga y el botón \"Iniciar Ruta\" es presionado\n  const handleStartRoute = () => {\n    setRouteStarted(true); // Marca que la ruta ha sido iniciada\n  };\n\n  useEffect(() => {\n    if (isLoaded && google && routeStarted) { // Solo calcula la ruta si \"Iniciar Ruta\" ha sido presionado\n      calculateRoute();\n    }\n  }, [isLoaded, google, routeStarted, calculateRoute]);\n\n  if (!isLoaded) return <div>Cargando mapa...</div>;\n\n  return (\n    <div className=\"ruta-despacho-container\">\n      <h2>Ruta de Despacho</h2>\n      \n      {/* Botón \"Iniciar Ruta\" */}\n      <button onClick={handleStartRoute}>Iniciar Ruta</button>\n\n      <GoogleMap\n        mapContainerStyle={{ width: '100%', height: '500px' }}\n        center={{ lat: -38.73965, lng: -72.58948 }} // Centrado inicial\n        zoom={12}\n      >\n        {directionsResponse && routeStarted && (\n          <DirectionsRenderer\n            directions={directionsResponse}\n            options={{ \n              suppressMarkers: true, // Opcional: para no mostrar los marcadores predeterminados\n              polylineOptions: {\n                strokeColor: '#FF0000', // Color de la línea del recorrido\n                strokeWeight: 5, // Grosor de la línea\n              },\n            }} \n          />\n        )}\n      </GoogleMap>\n\n      {/* Detalles de la ruta */}\n      <div className=\"ruta-info\">\n        <h3>Detalles de la Ruta:</h3>\n        <ul>\n          <li><strong>Origen:</strong> {origin}</li>\n          <li><strong>Destino:</strong> {destination}</li>\n          <li><strong>Paradas intermedias:</strong></li>\n          {waypoints.map((point, index) => (\n            <li key={index}>{point.location}</li>\n          ))}\n        </ul>\n        \n        {/* Muestra los pasos de la ruta */}\n        {directionsResponse && routeStarted && (\n          <div>\n            <h3>Instrucciones de la Ruta:</h3>\n            <ul>\n              {directionsResponse.routes[0].legs[0].steps.map((step, index) => (\n                <li key={index}>\n                  <strong>{step.distance.text}:</strong> {step.instructions}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RutaDespacho;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}