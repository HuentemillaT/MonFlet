{"ast":null,"code":"var _jsxFileName = \"/home/tania-huentemilla/Documentos/MonFlet/src/components/vehiculos2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, DirectionsRenderer, TrafficLayer, useJsApiLoader } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RutaDespacho = () => {\n  _s();\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [origin] = useState('Temuco, Chile'); // Origen de la ruta\n  const [destination] = useState('Pucón, Chile'); // Destino de la ruta\n  const [waypoints] = useState([{\n    location: 'Lican Ray, Chile',\n    stopover: true\n  },\n  // Parada intermedia 1\n  {\n    location: 'Villarrica, Chile',\n    stopover: true\n  } // Parada intermedia 2\n  ]);\n  const [routeStarted, setRouteStarted] = useState(false); // Estado para saber si la ruta ha iniciado\n\n  // Carga de la API de Google Maps\n  const {\n    isLoaded,\n    google\n  } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyCcF0vvhLLmuLAJcnh2ElM9aLcIwtiiwMo',\n    // Reemplaza con tu API Key de Google Maps\n    libraries: ['directions', 'traffic'] // Incluye la librería de tráfico\n  });\n\n  // Usamos useCallback para evitar recrear la función en cada render\n  const calculateRoute = useCallback(() => {\n    if (!origin || !destination || !google) return; // Asegurarnos que `google` esté disponible\n\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      waypoints: waypoints,\n      travelMode: google.maps.TravelMode.DRIVING,\n      drivingOptions: {\n        departureTime: new Date(),\n        // Utiliza la hora actual para obtener las mejores opciones de tráfico\n        trafficModel: google.maps.TrafficModel.BEST_GUESS // Mejor estimación del tráfico\n      },\n      unitSystem: google.maps.UnitSystem.METRIC\n    }, (result, status) => {\n      if (status === 'OK') {\n        setDirectionsResponse(result);\n      } else {\n        console.error('Error al calcular la ruta: ', status);\n      }\n    });\n  }, [origin, destination, waypoints, google]);\n  const startRoute = () => {\n    setRouteStarted(true);\n  };\n  useEffect(() => {\n    if (isLoaded && google) {\n      calculateRoute();\n    }\n  }, [isLoaded, google, calculateRoute]);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando mapa...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ruta-despacho-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ruta de Despacho\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), !routeStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRoute,\n      className: \"start-route-btn\",\n      children: \"Iniciar Ruta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        width: '100%',\n        height: '500px'\n      },\n      center: {\n        lat: -38.73965,\n        lng: -72.58948\n      } // Centrado inicial\n      ,\n      zoom: 12,\n      children: [directionsResponse && routeStarted && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directionsResponse,\n        options: {\n          suppressMarkers: true,\n          // Opcional: para no mostrar los marcadores predeterminados\n          polylineOptions: {\n            strokeColor: '#ff0000',\n            // Color de la ruta\n            strokeWeight: 5 // Grosor de la línea de la ruta\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TrafficLayer, {\n        autoUpdate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), routeStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ruta-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Detalles de la Ruta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Origen:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), \" \", origin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Destino:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), \" \", destination]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Paradas intermedias:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), waypoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: point.location\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(RutaDespacho, \"uQDdBnC3/W0bmZz+b7xHpK+4sW0=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = RutaDespacho;\nexport default RutaDespacho;\nvar _c;\n$RefreshReg$(_c, \"RutaDespacho\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","DirectionsRenderer","TrafficLayer","useJsApiLoader","jsxDEV","_jsxDEV","RutaDespacho","_s","directionsResponse","setDirectionsResponse","origin","destination","waypoints","location","stopover","routeStarted","setRouteStarted","isLoaded","google","googleMapsApiKey","libraries","calculateRoute","directionsService","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","drivingOptions","departureTime","Date","trafficModel","TrafficModel","BEST_GUESS","unitSystem","UnitSystem","METRIC","result","status","console","error","startRoute","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","mapContainerStyle","width","height","center","lat","lng","zoom","directions","options","suppressMarkers","polylineOptions","strokeColor","strokeWeight","autoUpdate","map","point","index","_c","$RefreshReg$"],"sources":["/home/tania-huentemilla/Documentos/MonFlet/src/components/vehiculos2.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, DirectionsRenderer, TrafficLayer, useJsApiLoader } from '@react-google-maps/api';\n\nconst RutaDespacho = () => {\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [origin] = useState('Temuco, Chile'); // Origen de la ruta\n  const [destination] = useState('Pucón, Chile'); // Destino de la ruta\n  const [waypoints] = useState([\n    { location: 'Lican Ray, Chile', stopover: true }, // Parada intermedia 1\n    { location: 'Villarrica, Chile', stopover: true }, // Parada intermedia 2\n  ]);\n  const [routeStarted, setRouteStarted] = useState(false); // Estado para saber si la ruta ha iniciado\n\n  // Carga de la API de Google Maps\n  const { isLoaded, google } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyCcF0vvhLLmuLAJcnh2ElM9aLcIwtiiwMo',  // Reemplaza con tu API Key de Google Maps\n    libraries: ['directions', 'traffic'], // Incluye la librería de tráfico\n  });\n\n  // Usamos useCallback para evitar recrear la función en cada render\n  const calculateRoute = useCallback(() => {\n    if (!origin || !destination || !google) return; // Asegurarnos que `google` esté disponible\n\n    const directionsService = new google.maps.DirectionsService();\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        waypoints: waypoints,\n        travelMode: google.maps.TravelMode.DRIVING,\n        drivingOptions: {\n          departureTime: new Date(),  // Utiliza la hora actual para obtener las mejores opciones de tráfico\n          trafficModel: google.maps.TrafficModel.BEST_GUESS,  // Mejor estimación del tráfico\n        },\n        unitSystem: google.maps.UnitSystem.METRIC,\n      },\n      (result, status) => {\n        if (status === 'OK') {\n          setDirectionsResponse(result);\n        } else {\n          console.error('Error al calcular la ruta: ', status);\n        }\n      }\n    );\n  }, [origin, destination, waypoints, google]);\n\n  const startRoute = () => {\n    setRouteStarted(true);\n  };\n\n  useEffect(() => {\n    if (isLoaded && google) {\n      calculateRoute();\n    }\n  }, [isLoaded, google, calculateRoute]);\n\n  if (!isLoaded) return <div>Cargando mapa...</div>;\n\n  return (\n    <div className=\"ruta-despacho-container\">\n      <h2>Ruta de Despacho</h2>\n\n      {/* Botón para iniciar la ruta */}\n      {!routeStarted && (\n        <button onClick={startRoute} className=\"start-route-btn\">\n          Iniciar Ruta\n        </button>\n      )}\n\n      <GoogleMap\n        mapContainerStyle={{ width: '100%', height: '500px' }}\n        center={{ lat: -38.73965, lng: -72.58948 }} // Centrado inicial\n        zoom={12}\n      >\n        {directionsResponse && routeStarted && (\n          <DirectionsRenderer\n            directions={directionsResponse}\n            options={{\n              suppressMarkers: true, // Opcional: para no mostrar los marcadores predeterminados\n              polylineOptions: {\n                strokeColor: '#ff0000',  // Color de la ruta\n                strokeWeight: 5,         // Grosor de la línea de la ruta\n              },\n            }}\n          />\n        )}\n\n        {/* Capa de tráfico */}\n        <TrafficLayer autoUpdate />\n      </GoogleMap>\n\n      {/* Detalles de la ruta */}\n      {routeStarted && (\n        <div className=\"ruta-info\">\n          <h3>Detalles de la Ruta:</h3>\n          <ul>\n            <li><strong>Origen:</strong> {origin}</li>\n            <li><strong>Destino:</strong> {destination}</li>\n            <li><strong>Paradas intermedias:</strong></li>\n            {waypoints.map((point, index) => (\n              <li key={index}>{point.location}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RutaDespacho;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}