{"ast":null,"code":"// src/services/userService.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const signup = async userData => {\n  try {\n    const response = await api.post('/signup', userData);\n    console.log('Respuesta del servidor:', response); // Log para verificar la respuesta completa\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error en signup:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error; // Lanza el error para ser manejado en el componente\n  }\n};\nexport const login = async credentials => {\n  const response = await api.post('/login', credentials);\n  return response.data;\n};\nexport const obtenerPerfil = async token => {\n  const response = await api.get('/perfil', {\n    headers: {\n      Authorization: token\n    }\n  });\n  return response.data;\n};\nexport const actualizarPerfil = async (token, data) => {\n  const response = await api.put('/perfil', data, {\n    headers: {\n      Authorization: token\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","signup","userData","response","post","console","log","data","error","_error$response","message","login","credentials","obtenerPerfil","token","get","Authorization","actualizarPerfil","put"],"sources":["/home/tania-huentemilla/Documentos/MonFlet/Frontend_MonFLet/src/services/userService.js"],"sourcesContent":["// src/services/userService.js\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const signup = async (userData) => {\n    try {\n      const response = await api.post('/signup', userData);\n      console.log('Respuesta del servidor:', response);  // Log para verificar la respuesta completa\n      return response.data;\n    } catch (error) {\n      console.error('Error en signup:', error.response?.data || error.message);\n      throw error;  // Lanza el error para ser manejado en el componente\n    }\n  };\n  \n\nexport const login = async (credentials) => {\n  const response = await api.post('/login', credentials);\n  return response.data;\n};\n\nexport const obtenerPerfil = async (token) => {\n  const response = await api.get('/perfil', {\n    headers: { Authorization: token },\n  });\n  return response.data;\n};\n\nexport const actualizarPerfil = async (token, data) => {\n  const response = await api.put('/perfil', data, {\n    headers: { Authorization: token },\n  });\n  return response.data;\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,MAAM,GAAG,MAAOC,QAAQ,IAAK;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,SAAS,EAAEF,QAAQ,CAAC;IACpDG,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,QAAQ,CAAC,CAAC,CAAE;IACnD,OAAOA,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdJ,OAAO,CAACG,KAAK,CAAC,kBAAkB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;IACxE,MAAMF,KAAK,CAAC,CAAE;EAChB;AACF,CAAC;AAGH,OAAO,MAAMG,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,MAAMT,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,QAAQ,EAAEQ,WAAW,CAAC;EACtD,OAAOT,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMM,aAAa,GAAG,MAAOC,KAAK,IAAK;EAC5C,MAAMX,QAAQ,GAAG,MAAMN,GAAG,CAACkB,GAAG,CAAC,SAAS,EAAE;IACxCf,OAAO,EAAE;MAAEgB,aAAa,EAAEF;IAAM;EAClC,CAAC,CAAC;EACF,OAAOX,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAG,MAAAA,CAAOH,KAAK,EAAEP,IAAI,KAAK;EACrD,MAAMJ,QAAQ,GAAG,MAAMN,GAAG,CAACqB,GAAG,CAAC,SAAS,EAAEX,IAAI,EAAE;IAC9CP,OAAO,EAAE;MAAEgB,aAAa,EAAEF;IAAM;EAClC,CAAC,CAAC;EACF,OAAOX,QAAQ,CAACI,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}